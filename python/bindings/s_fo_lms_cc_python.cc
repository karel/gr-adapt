/*
 * Copyright 2025 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(s_fo_lms_cc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(430a15809615b772c5e1720243a6917c)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <adapt/s_fo_lms_cc.h>
// pydoc.h is automatically generated in the build directory
#include <s_fo_lms_cc_pydoc.h>

void bind_s_fo_lms_cc(py::module& m) {

    using s_fo_lms_cc = ::gr::adapt::s_fo_lms_cc;


    py::class_<s_fo_lms_cc, gr::block, gr::basic_block, std::shared_ptr<s_fo_lms_cc>>(
        m, "s_fo_lms_cc", D(s_fo_lms_cc))

        .def(py::init(&s_fo_lms_cc::make),
             py::arg("samp_rate"),
             py::arg("num_taps"),
             py::arg("mu_cir"),
             py::arg("mu_cfo"),
             py::arg("mu_sfo"),
             py::arg("mu_q"),
             py::arg("adapt"),
             py::arg("reset"),
             D(s_fo_lms_cc, make))


        .def("get_mu_cir", &s_fo_lms_cc::get_mu_cir, D(s_fo_lms_cc, get_mu_cir))


        .def("set_mu_cir", &s_fo_lms_cc::set_mu_cir, py::arg("mu_cir"), D(s_fo_lms_cc, set_mu_cir))


        .def("get_mu_cfo", &s_fo_lms_cc::get_mu_cfo, D(s_fo_lms_cc, get_mu_cfo))


        .def("set_mu_cfo", &s_fo_lms_cc::set_mu_cfo, py::arg("mu_cfo"), D(s_fo_lms_cc, set_mu_cfo))


        .def("get_mu_sfo", &s_fo_lms_cc::get_mu_sfo, D(s_fo_lms_cc, get_mu_sfo))


        .def("set_mu_sfo", &s_fo_lms_cc::set_mu_sfo, py::arg("mu_sfo"), D(s_fo_lms_cc, set_mu_sfo))


        .def("get_mu_q", &s_fo_lms_cc::get_mu_q, D(s_fo_lms_cc, get_mu_q))


        .def("set_mu_q", &s_fo_lms_cc::set_mu_q, py::arg("mu_q"), D(s_fo_lms_cc, set_mu_q))


        .def("get_adapt", &s_fo_lms_cc::get_adapt, D(s_fo_lms_cc, get_adapt))


        .def("set_adapt", &s_fo_lms_cc::set_adapt, py::arg("adapt"), D(s_fo_lms_cc, set_adapt))


        .def("get_reset", &s_fo_lms_cc::get_reset, D(s_fo_lms_cc, get_reset))


        .def("set_reset", &s_fo_lms_cc::set_reset, py::arg("reset"), D(s_fo_lms_cc, set_reset))

        ;
}
